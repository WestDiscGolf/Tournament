@using Tournament.ViewModels
@model TeamViewModel

@{
    ViewBag.Title = "Detail";
}

<div class="row">
    <div class="span12">
        <ul class="breadcrumb">
            <li>
                @Html.ActionLink("Home", "Index", "Home") <span class="divider">/</span>
            </li>
            <li>
                @Html.ActionLink("Teams", "Index", "Team") <span class="divider">/</span>
            </li>
            <li class="active">
                @Model.Name
            </li>
        </ul>
        <div class="page-header">
            <h1>
                @Model.Name 
            </h1>
        </div>
    </div>
</div>
<div class="row">
    <div class="span6">
        Website: <a href="@Model.Website">@Model.Website</a>
    </div>
    <div class="span6">
        @if ((Model.HomeCourse != null) && (IsSet(Model.HomeCourse)))
        {
            @Html.DisplayFor(model => model.HomeCourse)
        }
    </div>
</div>
<div class="row">
    <div class="span12">
        @*<h2>Captain(s)</h2>
        @{ Html.RenderAction("TeamCaptains", "Player", new { teamId = Model.Id }); }*@
        <h2>Players</h2>
        @{ Html.RenderAction("ByTeam", "Player", new { teamId = Model.Id }); }
    </div>
</div>
    
@functions
{
    public bool IsSet(LocationViewModel courseLocation)
    {
        return ((courseLocation.Latitude.HasValue && courseLocation.Latitude.Value != 0)
                        && (courseLocation.Longitude.HasValue && courseLocation.Longitude.Value != 0));
    }
}